minikube delete
minikube start
minikube stop
minikube status

kubectl get pods
kubectl get pods --all-namespaces
kubectl run my-pod-apache-server --image httpd
kubectl get pods -o wide
kubectl delete pods my-pod-apache-server
kubectl run my-pod-2 --image httpd
kubectl run my-pod-3 --image httpd
kubectl delete --all pods

kubectl create -f my-pod.yaml
kubectl apply -f my-pod.yaml

kubectl get replicasets
kubectl delete --all pods && kubectl get pods
kubectl apply -f my-replicaset.yaml && kubectl get pods
kubectl scale replicasets frontend-rs --replica=5

watch kubectl get pods
kubectl scale replicasets frontend-rs --replicas=20 && watch kubectl get pods
kubectl scale replicasets frontend-rs --replicas=1 && watch kubectl get pods

kubectl get deployments
kubectl rollout status deployment.apps/frontend-deployment
kubectl describe deployment.apps/frontend-deployment

kubectl get all

kubectl rollout history deployment.apps/frontend-deployment
kubectl rollout history deployment.apps/frontend-deployment --revision=2
kubectl rollout history deployment.apps/frontend-deployment --revision=3
kubectl rollout history deployment.apps/frontend-deployment --revision=5

kubectl apply -f my-deployment.yaml --record

kubectl rollout undo deployment.apps/frontend-deployment
kubectl rollout undo deployment.apps/frontend-deployment --to-revision=5
kubectl rollout history deployment.apps/frontend-deployment --revision=9
kubectl rollout pause deployment.apps/frontend-deployment
kubectl rollout resume deployment.apps/frontend-deployment

kubectl scale deployment.apps/frontend-deployment --replicas=11
kubectl scale deployment.apps/frontend-deployment --replicas=2

kubectl describe deployment.apps/frontend-deployment | grep StrategyType

kubectl apply -f tomcat-pod.yaml
kubectl apply -f redis-pod.yaml
kubectl describe pods redis-pod | grep IP
kubectl exec -it tomcat-pod -- bash
apt install iputils-ping -y
ping 172.17.0.4

kubectl get namespaces
kubectl get ns
kubectl get pods -n kube-system
kubectl create namespace frontend --save-config
kubectl apply -f tomcat-pod.yaml --namespace=frontend
kubectl get pods -n frontend
kubectl config set-context --current --namespace=frontend
kubectl config set-context --current --namespace=default
kubectl delete namespace frontend
kubectl delete ns backend-ns

kubectl get svc
kubectl run -it debian-pod --image=debian bash
apt update
apt install curl -y
kubectl get services --all-namespaces -o wide
kubectl get services frontend-service --namespace=default -o wide

kubectl delete services frontend-service --namespace=default
kubectl delete all --all
kubectl delete all --all --namespace=default
kubectl get all --all-namespaces
kubectl delete all --all --all-namespaces

minikube service --url frontend-service-nodeport
kubectl get nodes -o yaml | grep address

kubectl apply -f livenessprobe.yaml && \
sleep 5 && \
kubectl get pods && \
sleep 30 && \
kubectl describe pods liveness-pod && \
sleep 35 && \
kubectl describe pods liveness-pod && \
sleep 30 & \
kubectl describe pods liveness-pod && \
kubectl get pods liveness-pod

kubectl exec -it redis-pod -- /bin/bash
install -y procps
ps aux
kill 1

kubectl get nodes
minikube node add

kubectl get ds

kubectl get pods -o wide --field-selector spec.nodeName=minikube
kubectl get pods -o wide --field-selector spec.nodeName=minikube-m02
kubectl get pods -o wide --field-selector spec.nodeName=minikube-m03
kubectl delete ds my-daemonset && kubectl get pods
kubectl delete ds my-daemonset --cascade=orphan

kubectl get nodes --show-labels
kubectl label nodes minikube-m03 disktype=ssd
kubectl get nodes --show-labels | grep disktype

kubectl delete -f specific-node-pod.yaml
kubectl label nodes minikube-m03 disktype-
kubectl label nodes minikube-m02 disktype=ssd

minikube node delete minikube-m02
minikube node delete minikube-m03

kubectl get ds/my-daemonset -o go-template='{{.spec.updateStrategy.type}}{{"\n"}}' -n default
get ds/my-daemonset -o go-template='{{.spec.updateStrategy.rollingUpdate.maxUnavailable}}{{"\n"}}' -n default

kubectl get jobs
kubectl describe job my-job
kubectl logs my-job-2blsp
kubectl delete jobs my-job

kubectl describe job my-job | grep Completions

kubectl apply -f my-job.yaml && kubectl get jobs --watch